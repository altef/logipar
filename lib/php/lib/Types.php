<?php
/**
 * Generated by Haxe 4.0.0-rc.2+77068e10c
 */

use \php\Boot;
use \php\_Boot\HxEnum;

class Types extends HxEnum {
	/**
	 * @param \Binary $op
	 * 
	 * @return Types
	 */
	static public function BINARY ($op) {
		return new Types('BINARY', 3, [$op]);
	}

	/**
	 * @return Types
	 */
	static public function CLOSE () {
		static $inst = null;
		if (!$inst) $inst = new Types('CLOSE', 1, []);
		return $inst;
	}

	/**
	 * @return Types
	 */
	static public function OPEN () {
		static $inst = null;
		if (!$inst) $inst = new Types('OPEN', 0, []);
		return $inst;
	}

	/**
	 * @param \Unary $op
	 * 
	 * @return Types
	 */
	static public function UNARY ($op) {
		return new Types('UNARY', 2, [$op]);
	}

	/**
	 * @param string $value
	 * 
	 * @return Types
	 */
	static public function VALUE ($value) {
		return new Types('VALUE', 4, [$value]);
	}

	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			3 => 'BINARY',
			1 => 'CLOSE',
			0 => 'OPEN',
			2 => 'UNARY',
			4 => 'VALUE',
		];
	}

	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'BINARY' => 1,
			'CLOSE' => 0,
			'OPEN' => 0,
			'UNARY' => 1,
			'VALUE' => 1,
		];
	}
}

Boot::registerClass(Types::class, 'Types');
