<?php
/**
 * Generated by Haxe 4.0.0-rc.2+77068e10c
 */

namespace promhx;

use \php\Boot;

class PublicStream extends Stream {
	/**
	 * @param mixed $val
	 * 
	 * @return PublicStream
	 */
	static public function publicstream ($val) {
		#C:\HaxeToolkit\haxe\lib\promhx/1,1,0/src/main/promhx/PublicStream.hx:13: characters 9-60
		$ps = new PublicStream(null);
		#C:\HaxeToolkit\haxe\lib\promhx/1,1,0/src/main/promhx/PublicStream.hx:14: characters 9-24
		$ps->handleResolve($val);
		#C:\HaxeToolkit\haxe\lib\promhx/1,1,0/src/main/promhx/PublicStream.hx:15: characters 9-18
		return $ps;
	}

	/**
	 * @param Deferred $def
	 * 
	 * @return void
	 */
	public function __construct ($def = null) {
		#C:\HaxeToolkit\haxe\lib\promhx/1,1,0/src/main/promhx/PublicStream.hx:7: characters 9-39
		parent::__construct($def);
	}

	/**
	 * @param mixed $val
	 * 
	 * @return void
	 */
	public function resolve ($val) {
		#C:\HaxeToolkit\haxe\lib\promhx/1,1,0/src/main/promhx/PublicStream.hx:9: characters 43-66
		$this->handleResolve($val);
	}

	/**
	 * @param mixed $e
	 * 
	 * @return void
	 */
	public function throwError ($e) {
		#C:\HaxeToolkit\haxe\lib\promhx/1,1,0/src/main/promhx/PublicStream.hx:10: characters 50-64
		$this->handleError($e);
	}

	/**
	 * @param mixed $val
	 * 
	 * @return void
	 */
	public function update ($val) {
		#C:\HaxeToolkit\haxe\lib\promhx/1,1,0/src/main/promhx/PublicStream.hx:11: characters 42-65
		$this->handleResolve($val);
	}
}

Boot::registerClass(PublicStream::class, 'promhx.PublicStream');
