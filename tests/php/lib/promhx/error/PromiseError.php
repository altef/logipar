<?php
/**
 * Generated by Haxe 4.0.0-rc.2+77068e10c
 */

namespace promhx\error;

use \php\Boot;
use \php\_Boot\HxEnum;

class PromiseError extends HxEnum {
	/**
	 * @param string $message
	 * 
	 * @return PromiseError
	 */
	static public function AlreadyResolved ($message) {
		return new PromiseError('AlreadyResolved', 0, [$message]);
	}

	/**
	 * @param string $message
	 * 
	 * @return PromiseError
	 */
	static public function DownstreamNotFullfilled ($message) {
		return new PromiseError('DownstreamNotFullfilled', 1, [$message]);
	}

	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			0 => 'AlreadyResolved',
			1 => 'DownstreamNotFullfilled',
		];
	}

	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'AlreadyResolved' => 1,
			'DownstreamNotFullfilled' => 1,
		];
	}
}

Boot::registerClass(PromiseError::class, 'promhx.error.PromiseError');
