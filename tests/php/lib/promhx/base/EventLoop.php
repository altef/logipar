<?php
/**
 * Generated by Haxe 4.0.0-rc.2+77068e10c
 */

namespace promhx\base;

use \php\Boot;
use \haxe\ds\List_hx;

class EventLoop {
	/**
	 * @var \Closure
	 */
	static public $nextLoop;
	/**
	 * @var List_hx
	 */
	static public $queue;

	/**
	 * @return void
	 */
	static public function continueOnNextLoop () {
		#C:\HaxeToolkit\haxe\lib\promhx/1,1,0/src/main/promhx/base/EventLoop.hx:65: lines 65-79
		if (EventLoop::$nextLoop !== null) {
			#C:\HaxeToolkit\haxe\lib\promhx/1,1,0/src/main/promhx/base/EventLoop.hx:65: characters 31-42
			(EventLoop::$nextLoop)(Boot::getStaticClosure(EventLoop::class, 'f'));
		} else {
			#C:\HaxeToolkit\haxe\lib\promhx/1,1,0/src/main/promhx/base/EventLoop.hx:77: characters 13-16
			EventLoop::f();
		}
	}

	/**
	 * @return void
	 */
	static public function f () {
		#C:\HaxeToolkit\haxe\lib\promhx/1,1,0/src/main/promhx/base/EventLoop.hx:59: characters 9-30
		$fn = EventLoop::$queue->pop();
		#C:\HaxeToolkit\haxe\lib\promhx/1,1,0/src/main/promhx/base/EventLoop.hx:60: characters 9-29
		if ($fn !== null) {
			#C:\HaxeToolkit\haxe\lib\promhx/1,1,0/src/main/promhx/base/EventLoop.hx:60: characters 25-29
			$fn();
		}
		#C:\HaxeToolkit\haxe\lib\promhx/1,1,0/src/main/promhx/base/EventLoop.hx:61: characters 9-48
		if (!EventLoop::$queue->isEmpty()) {
			#C:\HaxeToolkit\haxe\lib\promhx/1,1,0/src/main/promhx/base/EventLoop.hx:61: characters 28-48
			EventLoop::continueOnNextLoop();
		}
	}

	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


		self::$queue = new List_hx();
	}
}

Boot::registerClass(EventLoop::class, 'promhx.base.EventLoop');
EventLoop::__hx__init();
