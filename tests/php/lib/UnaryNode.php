<?php
/**
 * Generated by Haxe 4.0.0-rc.2+77068e10c
 */

use \php\Boot;

class UnaryNode extends \Node {
	/**
	 * @var \Node
	 */
	public $right;

	/**
	 * @param \Types $type
	 * 
	 * @return void
	 */
	public function __construct ($type) {
		#src/LogicString.hx:47: lines 47-57
		parent::__construct($type);
	}

	/**
	 * @return string
	 */
	public function toString () {
		#src/LogicString.hx:50: characters 10-19
		$_g = $this->type;
		if ($_g->index === 2) {
			#src/LogicString.hx:51: characters 21-22
			$o = $_g->params[0];
			#src/LogicString.hx:52: characters 5-38
			return "(NOT " . (\Std::string($this->right)??'null') . ")";
		} else {
			#src/LogicString.hx:54: characters 5-34
			return "[INVALID UNARY NODE]";
		}
	}

	public function __toString() {
		return $this->toString();
	}
}

Boot::registerClass(UnaryNode::class, 'UnaryNode');
