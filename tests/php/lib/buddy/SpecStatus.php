<?php
/**
 * Generated by Haxe 4.0.0-rc.2+77068e10c
 */

namespace buddy;

use \php\Boot;
use \php\_Boot\HxEnum;

class SpecStatus extends HxEnum {
	/**
	 * @return SpecStatus
	 */
	static public function Failed () {
		static $inst = null;
		if (!$inst) $inst = new SpecStatus('Failed', 3, []);
		return $inst;
	}

	/**
	 * @return SpecStatus
	 */
	static public function Passed () {
		static $inst = null;
		if (!$inst) $inst = new SpecStatus('Passed', 1, []);
		return $inst;
	}

	/**
	 * @return SpecStatus
	 */
	static public function Pending () {
		static $inst = null;
		if (!$inst) $inst = new SpecStatus('Pending', 2, []);
		return $inst;
	}

	/**
	 * @return SpecStatus
	 */
	static public function Unknown () {
		static $inst = null;
		if (!$inst) $inst = new SpecStatus('Unknown', 0, []);
		return $inst;
	}

	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			3 => 'Failed',
			1 => 'Passed',
			2 => 'Pending',
			0 => 'Unknown',
		];
	}

	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'Failed' => 0,
			'Passed' => 0,
			'Pending' => 0,
			'Unknown' => 0,
		];
	}
}

Boot::registerClass(SpecStatus::class, 'buddy.SpecStatus');
