<?php
/**
 * Generated by Haxe 4.0.0-rc.2+77068e10c
 */

namespace buddy;

use \php\Boot;
use \haxe\ds\List_hx;
use \php\_Boot\HxException;

class TestSuite {
	/**
	 * @var List_hx
	 */
	public $afterAll;
	/**
	 * @var List_hx
	 */
	public $afterEach;
	/**
	 * @var List_hx
	 */
	public $beforeAll;
	/**
	 * @var List_hx
	 */
	public $beforeEach;
	/**
	 * @var string
	 */
	public $description;
	/**
	 * @var List_hx
	 */
	public $specs;

	/**
	 * @param string $description
	 * 
	 * @return void
	 */
	public function __construct ($description) {
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/BuddySuite.hx:144: characters 24-44
		$this->afterAll = new List_hx();
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/BuddySuite.hx:143: characters 25-45
		$this->afterEach = new List_hx();
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/BuddySuite.hx:141: characters 21-41
		$this->specs = new List_hx();
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/BuddySuite.hx:139: characters 26-46
		$this->beforeEach = new List_hx();
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/BuddySuite.hx:138: characters 25-45
		$this->beforeAll = new List_hx();
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/BuddySuite.hx:147: characters 3-32
		if ($description === null) {
			#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/BuddySuite.hx:147: characters 27-32
			throw new HxException("TestSuite must have a description. Can be empty.");
		}
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/BuddySuite.hx:148: characters 3-33
		$this->description = $description;
	}
}

Boot::registerClass(TestSuite::class, 'buddy.TestSuite');
