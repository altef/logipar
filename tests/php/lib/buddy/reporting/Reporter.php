<?php
/**
 * Generated by Haxe 4.0.0-rc.2+77068e10c
 */

namespace buddy\reporting;

use \buddy\Spec;
use \php\Boot;
use \promhx\Promise;

interface Reporter {
	/**
	 * Called after the last spec is run. Useful for displaying a test summary.
	 * Resolve with the same iterable as the parameter.
	 * Status is true if all tests passed, otherwise false.
	 * 
	 * @param object $suites
	 * @param bool $status
	 * 
	 * @return Promise
	 */
	public function done ($suites, $status) ;

	/**
	 * Called for every Spec. Can be used to display realtime notifications.
	 * Resolve with the same spec as the parameter.
	 * 
	 * @param Spec $spec
	 * 
	 * @return Promise
	 */
	public function progress ($spec) ;

	/**
	 * Called just before tests are run. If promise is resolved with "false",
	 * testing will immediately exit with status 1.
	 * 
	 * @return Promise
	 */
	public function start () ;
}

Boot::registerClass(Reporter::class, 'buddy.reporting.Reporter');
