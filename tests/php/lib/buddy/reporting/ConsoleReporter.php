<?php
/**
 * Generated by Haxe 4.0.0-rc.2+77068e10c
 */

namespace buddy\reporting;

use \buddy\Spec;
use \php\Boot;
use \promhx\Promise;

class ConsoleReporter extends TraceReporter {
	/**
	 * @var string
	 */
	public $progressString;

	/**
	 * @param bool $colors
	 * 
	 * @return void
	 */
	public function __construct ($colors = false) {
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/reporting/ConsoleReporter.hx:23: lines 23-106
		if ($colors === null) {
			$colors = false;
		}
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/reporting/ConsoleReporter.hx:25: characters 23-25
		$this->progressString = "";
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/reporting/ConsoleReporter.hx:28: characters 3-16
		parent::__construct($colors);
	}

	/**
	 * @param object $suites
	 * @param bool $status
	 * 
	 * @return Promise
	 */
	public function done ($suites, $status) {
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/reporting/ConsoleReporter.hx:68: characters 3-43
		$output = parent::done($suites, $status);
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/reporting/ConsoleReporter.hx:71: lines 71-77
		if (php_sapi_name() !== "cli") {
			#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/reporting/ConsoleReporter.hx:77: characters 13-30
			$this->println("</pre>");
		}
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/reporting/ConsoleReporter.hx:80: characters 3-16
		return $output;
	}

	/**
	 * @param string $s
	 * 
	 * @return void
	 */
	public function print ($s) {
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/reporting/ConsoleReporter.hx:85: characters 3-15
		echo(\Std::string($s));
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/reporting/ConsoleReporter.hx:90: characters 3-29
		flush();
	}

	/**
	 * @param string $s
	 * 
	 * @return void
	 */
	public function println ($s) {
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/reporting/ConsoleReporter.hx:97: characters 3-17
		echo((\Std::string($s)??'null') . "\x0A");
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/reporting/ConsoleReporter.hx:102: characters 3-29
		flush();
	}

	/**
	 * @param Spec $spec
	 * 
	 * @return Promise
	 */
	public function progress ($spec) {
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/reporting/ConsoleReporter.hx:49: lines 49-54
		$status = null;
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/reporting/ConsoleReporter.hx:49: characters 23-34
		$__hx__switch = ($spec->status->index);
		if ($__hx__switch === 0) {
			#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/reporting/ConsoleReporter.hx:49: lines 49-54
			$status = ($this->strCol(33)??'null') . "?";
		} else if ($__hx__switch === 1) {
			$status = ($this->strCol(32)??'null') . ".";
		} else if ($__hx__switch === 2) {
			$status = ($this->strCol(33)??'null') . "P";
		} else if ($__hx__switch === 3) {
			$status = ($this->strCol(31)??'null') . "X";
		}
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/reporting/ConsoleReporter.hx:56: characters 3-27
		$this->progressString = ($this->progressString??'null') . ($status??'null');
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/reporting/ConsoleReporter.hx:57: characters 3-34
		$this->print(($status??'null') . ($this->strCol(39)??'null'));
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/reporting/ConsoleReporter.hx:59: characters 3-34
		return $this->resolveImmediately($spec);
	}

	/**
	 * @return Promise
	 */
	public function start () {
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/reporting/ConsoleReporter.hx:35: lines 35-41
		if (php_sapi_name() !== "cli") {
			#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/reporting/ConsoleReporter.hx:41: characters 13-29
			$this->println("<pre>");
		}
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/reporting/ConsoleReporter.hx:44: characters 3-34
		return $this->resolveImmediately(true);
	}
}

Boot::registerClass(ConsoleReporter::class, 'buddy.reporting.ConsoleReporter');
