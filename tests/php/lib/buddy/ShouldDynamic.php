<?php
/**
 * Generated by Haxe 4.0.0-rc.2+77068e10c
 */

namespace buddy;

use \php\Boot;

/**
 * This must be the first class in this package, since it overrides all other assertions otherwise.
 */
class ShouldDynamic extends Should {

	/**
	 * @param mixed $d
	 * 
	 * @return ShouldDynamic
	 */
	static public function should ($d) {
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/Should.hx:26: characters 3-30
		return new ShouldDynamic($d);
	}

	/**
	 * @param mixed $value
	 * @param bool $inverse
	 * 
	 * @return void
	 */
	public function __construct ($value, $inverse = null) {
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/Should.hx:22: lines 22-31
		parent::__construct($value, $inverse);
	}

	/**
	 * @return ShouldDynamic
	 */
	public function get_not () {
		#C:\HaxeToolkit\haxe\lib\buddy/2,10,2/buddy/Should.hx:30: characters 31-72
		return new ShouldDynamic($this->value, !$this->inverse);
	}
}

Boot::registerClass(ShouldDynamic::class, 'buddy.ShouldDynamic');
Boot::registerGetters('buddy\\ShouldDynamic', [
	'not' => true
]);
